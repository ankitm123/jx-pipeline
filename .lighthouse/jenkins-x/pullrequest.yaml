apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  pipelineSpec:
    tasks:
    - name: from-build-pack
      resources: {}
      taskSpec:
        metadata: {}
        stepTemplate:
          image: uses:jenkins-x/jx3-pipeline-catalog/tasks/go-plugin/pullrequest.yaml@versionStream
          name: ""
          resources: {}
          workingDir: /workspace/source
        steps:
        - image: uses:jenkins-x/jx3-pipeline-catalog/tasks/git-clone/git-clone-pr.yaml@versionStream
          name: ""
          resources: {}
        - name: jx-variables
          resources: {}
        - name: build-make-linux
          resources: {}
        # Move to catalog
        - image: golang:1.17.9-alpine3.15
          name: coverage-report
          resources: {}
          script: |
            #!/bin/sh
            source .jx/variables.sh
            apk add --update make bash curl gnupg coreutils git
            make test-coverage
            curl https://keybase.io/codecovsecurity/pgp_keys.asc | gpg --no-default-keyring --keyring trustedkeys.gpg --import
            curl -Os https://uploader.codecov.io/latest/alpine/codecov
            curl -Os https://uploader.codecov.io/latest/alpine/codecov.SHA256SUM
            curl -Os https://uploader.codecov.io/latest/alpine/codecov.SHA256SUM.sig
            gpgv codecov.SHA256SUM.sig codecov.SHA256SUM
            sha256sum -c codecov.SHA256SUM
            chmod +x codecov
            ./codecov -Z -B ${PR_HEAD_REF} -C ${PULL_PULL_SHA} -t ${CODECOV_TOKEN} -R . -f ./build/reports/cover.txt
          env:
          - name: CODECOV_TOKEN
            valueFrom:
              secretKeyRef:
                name: codecov
                key: token
                optional: true
        - name: build-container-build
          resources: {}
  podTemplate: {}
  serviceAccountName: tekton-bot
  timeout: 1h
status: {}
